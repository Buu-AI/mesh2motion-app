/* radio-button-group.css - Updated to match NextJS/shadcn theme */
:root {
  --primary-color: hsl(240 14% 89%);
  --primary-background: rgba(28, 32, 39, 0.6);
  --primary-background-hover: rgba(28, 32, 39, 0.8);
  --primary-background-active: rgba(120, 219, 255, 0.2);
  --border-color: rgba(255, 255, 255, 0.08);
  --border-color-hover: rgba(255, 255, 255, 0.12);
  --text-color: hsl(240 14% 89%);
  --text-muted: hsl(216 14% 85%);
}

fieldset {
    border: 1px solid var(--border-color);
    background: rgba(28, 32, 39, 0.3);
    backdrop-filter: blur(10px);
    margin: 0;
    padding: 0.5rem;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    flex-direction: column;
    border-radius: 8px;
    box-shadow: 0px 0px 7.8px 3px rgba(33, 42, 52, 0.6) inset;
}

fieldset > span {
    font-size: 12px;
    color: var(--text-muted);
    margin-bottom: 0.25rem;
    font-weight: 500;
}

.toggle {
    box-sizing: border-box;
    display: flex;
    flex-flow: row nowrap;
    justify-content: flex-start;
    align-items: stretch;
    border-radius: 6px;
    overflow: hidden;
    background: rgba(28, 32, 39, 0.2);
    border: 1px solid var(--border-color);
}

/* hide the actual radio button input elements */
.toggle input {
    width: 0;
    height: 0;
    position: absolute;
    left: -9999px;
}

/* main default style for the elements */
.toggle input + label {
    padding: 0.5rem 0.75rem;
    background: transparent;
    border: none;
    font-size: 12px;
    color: var(--text-color);
    cursor: pointer;
    transition: all 0.15s ease-out;
    display: flex;
    align-items: center;
    justify-content: center;
    min-width: 40px;
    position: relative;
    backdrop-filter: blur(5px);
}

/* Remove border radius overrides since parent handles it */
.toggle input + label:first-of-type {
    border-right: 1px solid var(--border-color);
}

.toggle input + label:not(:first-of-type):not(:last-of-type) {
    border-right: 1px solid var(--border-color);
}

.toggle input + label:last-of-type {
    /* No additional border needed */
}

/* hover state */
.toggle input:hover + label {
    background: var(--primary-background-hover);
    color: var(--text-color);
}

/* active/checked state */
.toggle input:checked + label {
    background: var(--primary-background-active);
    background: linear-gradient(135deg, rgba(120, 219, 255, 0.3) 0%, rgba(82, 186, 255, 0.2) 100%);
    color: var(--text-color);
    box-shadow: 
        0px 0px 10px 2px rgba(120, 219, 255, 0.1) inset,
        0px 0px 20px 0px rgba(120, 219, 255, 0.05);
    z-index: 1;
    font-weight: 500;
}

/* Image icons within labels */
.toggle input + label img {
    width: 20px;
    height: 20px;
    filter: brightness(0.8) contrast(1.2);
    transition: filter 0.15s ease-out;
}

.toggle input:checked + label img {
    filter: brightness(1.2) contrast(1.3) drop-shadow(0 0 3px rgba(120, 219, 255, 0.3));
}

.toggle input:hover + label img {
    filter: brightness(1) contrast(1.2);
}

/* Focus styles for accessibility */
.toggle input:focus + label {
    outline: 2px solid rgba(120, 219, 255, 0.5);
    outline-offset: 2px;
}

/* Disabled state */
.toggle input:disabled + label {
    opacity: 0.5;
    cursor: not-allowed;
    background: rgba(28, 32, 39, 0.1);
}

.toggle input:disabled:hover + label {
    background: rgba(28, 32, 39, 0.1);
}

/* Enhanced visual feedback */
.toggle input + label::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: transparent;
    transition: background 0.15s ease-out;
    pointer-events: none;
}

.toggle input:checked + label::before {
    background: linear-gradient(135deg, rgba(120, 219, 255, 0.1) 0%, rgba(82, 186, 255, 0.05) 100%);
}